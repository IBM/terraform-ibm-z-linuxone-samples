---
- name: Manage LPAR using Terraform
  hosts: localhost
  gather_facts: false
  vars_files:
    - hmc_secrets.yml
  vars:
    terraform_path: "../terraform"
    terraform_state: "present"

    task_desc: "{{'Call Terraform to update a LPAR resource into state file' if terraform_state == 'present' else 'Call Terraform to destroy a LPAR resource from state file'}}"

  tasks:
    - name: Generate terraform.tfvars file
      ansible.builtin.copy:
        content: |
          ibm_z_linuxone_host  = "{{ ibm_z_linuxone_host }}" 
          ibm_z_linuxone_username  = "{{ ibm_z_linuxone_username }}" 
          ibm_z_linuxone_password  = "{{ ibm_z_linuxone_password }}" # pragma: allowlist secret
        dest: "{{ terraform_path }}/terraform.tfvars"

    - name: "{{ task_desc }}"
      cloud.terraform.terraform:
        project_path: "{{ terraform_path }}"
        state: "{{ terraform_state }}"
        force_init: true  # Force reinitialization if needed
        # Note use of the env variable set by the Terraform backend credential to store the backend configuration file path
        backend_config_files:
          - "{{ lookup('ansible.builtin.env', 'TF_BACKEND_CONFIG_FILE') }}"
      delegate_to: localhost
